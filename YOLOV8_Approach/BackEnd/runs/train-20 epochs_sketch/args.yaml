task: detect
mode: train
model: yolov8n.yaml
data: C:/Users/User/Desktop/sketch-to-codeV0/data/data.yaml
epochs: 20
time: null
patience: 100
batch: 16
imgsz: 640
save: true
save_period: -1
cache: false
device: null
workers: 8
project: runs
name: train4
exist_ok: false
pretrained: true
optimizer: auto
verbose: true
seed: 0
deterministic: true
single_cls: false
rect: false
cos_lr: false
close_mosaic: 10
resume: false
amp: true
fraction: 1.0
profile: false
freeze: null
multi_scale: false
overlap_mask: true
mask_ratio: 4
dropout: 0.0
val: true
split: val
save_json: false
save_hybrid: false
conf: null
iou: 0.7
max_det: 300
half: false
dnn: false
plots: true
source: null
vid_stride: 1
stream_buffer: false
visualize: false
augment: false
agnostic_nms: false
classes: null
retina_masks: false
embed: null
show: false
save_frames: false
save_txt: false
save_conf: false
save_crop: false
show_labels: true
show_conf: true
show_boxes: true
line_width: null
format: torchscript
keras: false
optimize: false
int8: false
dynamic: false
simplify: false
opset: null
workspace: 4
nms: false
lr0: 0.01
lrf: 0.01
momentum: 0.937
weight_decay: 0.0005
warmup_epochs: 3.0
warmup_momentum: 0.8
warmup_bias_lr: 0.1
box: 7.5
cls: 0.5
dfl: 1.5
pose: 12.0
kobj: 1.0
label_smoothing: 0.0
nbs: 64
hsv_h: 0.015
hsv_s: 0.7
hsv_v: 0.4
degrees: 0.0
translate: 0.1
scale: 0.5
shear: 0.0
perspective: 0.0
flipud: 0.0
fliplr: 0.5
mosaic: 1.0
mixup: 0.0
copy_paste: 0.0
auto_augment: randaugment
erasing: 0.4
crop_fraction: 1.0
cfg: null
tracker: botsort.yaml
save_dir: runs\train4



#Notes 
# YAML  : Yet Another Markup Language (language of formatting data)
# epochs: Number of times to iterate through the entire training dataset (set to 20 here).
# batch: Number of images processed together during training (set to 16 here).
# imgsz: Size to which images will be resized for training (set to 640 pixels here).
# optimizer: Algorithm used to update model weights during training (set to "auto" for automatic selection).
# learning rate (lr0, lrf): Controls how much the weights are adjusted during training (initial value and final value specified).
# augment: Defines data augmentation techniques to improve model generalizability (various techniques listed for random variations in color, position, and flips).
# Validation and Output:
# val: Enables validation on a separate portion of the data to monitor training progress.
# iou: Sets the minimum Intersection over Union (IoU) threshold for considering a detection correct (set to 0.7 here).
# plots: Enables generation of training progress plots.
# show_boxes, show_labels, show_conf: Controls displaying bounding boxes, class labels, and confidence scores during training visualization.
